# -- nameOverride overrides the chart name
nameOverride: ""
# -- fullnameOverride overrides the full name of the chart
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # -- create tells if a service account should be created
  create: false
  # -- automount tells if the service account should be automounted
  automount: true
  # -- annotations to add to the service account
  annotations: {}
  # -- name is the name of the service account to use
  name: ""

# Server configuration
server:
  # -- replicaCount is the number of replicas to deploy
  replicaCount: 1

  # Information about the Fuseki Docker image to use.
  # In case you want to use a custom image, you can set the repository and tag here.
  image:
    # -- repository is the Docker image to use
    repository: ghcr.io/zazukoians/qlever-server
    # -- pullPolicy is the policy to use when pulling the image
    pullPolicy: IfNotPresent
    # -- tag is used to overrides the image tag whose default is the chart appVersion
    tag: ""

  # -- imagePullSecrets used to pull the Docker image
  imagePullSecrets: []

  # -- podAnnotations to use
  podAnnotations: {}
  # -- podLabels to use
  podLabels: {}

  # Pod security context configuration
  podSecurityContext:
    # -- fsGroup is the group ID to run the container as
    fsGroup: 1000
    # -- runAsGroup is the group ID to run the container as
    runAsGroup: 1000
    # -- runAsNonRoot tells if the container should run as a non-root user
    runAsNonRoot: true
    # -- runAsUser is the user ID to run the container as
    runAsUser: 1000

  # Security context configuration
  securityContext:
    # -- allowPrivilegeEscalation tells if the container can request to allow privilege escalation
    allowPrivilegeEscalation: false
    # -- capabilities to add/drop
    capabilities: {}
    # -- privileged tells if the container is privileged
    privileged: false
    # -- runAsNonRoot tells if the container should run as a non-root user
    runAsNonRoot: true
    # -- runAsUser is the user ID to run the container as
    runAsUser: 1000
    # -- readOnlyRootFilesystem tells if the container should have a read-only root filesystem
    readOnlyRootFilesystem: false
    # -- seLinuxOptions to add
    seLinuxOptions: {}

  # Service configuration
  service:
    # -- type is the type of service to create
    type: ClusterIP
    # -- port is the port the service will listen on
    port: 7001

  # Ingress configuration
  ingress:
    # -- enabled allows you to enable or disable the Ingress
    enabled: false
    # -- className is the ingress class to use
    className: ""
    # -- annotations to add to the Ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- hosts is the list of hostnames to be exposed
    hosts:
      []
      # - host: qlever-server-example.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    # -- tls is the list of TLS configuration
    tls: []
    #  - secretName: qlever-server-example-tls
    #    hosts:
    #      - qlever-server-example.local

  # -- resources to request for the pod
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- livenessProbe is a health check to determine if the container is still running
  livenessProbe:
    httpGet:
      path: "/"
      port: http

  # -- readinessProbe is a health check to determine if the container is ready to serve traffic
  readinessProbe:
    httpGet:
      path: "/"
      port: http

  # -- volumes to mount on the output Deployment definition
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- volume mounts to use
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # -- nodeSelector to use
  nodeSelector: {}

  # -- tolerations to use
  tolerations: []

  # -- affinity to use
  affinity: {}

# UI configuration
ui:
  # -- replicaCount is the number of replicas to deploy
  replicaCount: 1

  # Information about the Fuseki Docker image to use.
  # In case you want to use a custom image, you can set the repository and tag here.
  image:
    # -- repository is the Docker image to use
    repository: ghcr.io/zazukoians/qlever-ui
    # -- pullPolicy is the policy to use when pulling the image
    pullPolicy: IfNotPresent
    # -- tag is used to overrides the image tag whose default is the chart appVersion
    tag: ""

  # -- imagePullSecrets used to pull the Docker image
  imagePullSecrets: []

  # -- podAnnotations to use
  podAnnotations: {}
  # -- podLabels to use
  podLabels: {}

  # Pod security context configuration
  podSecurityContext:
    # -- fsGroup is the group ID to run the container as
    fsGroup: 1000
    # -- runAsGroup is the group ID to run the container as
    runAsGroup: 1000
    # -- runAsNonRoot tells if the container should run as a non-root user
    runAsNonRoot: true
    # -- runAsUser is the user ID to run the container as
    runAsUser: 1000

  # Security context configuration
  securityContext:
    # -- allowPrivilegeEscalation tells if the container can request to allow privilege escalation
    allowPrivilegeEscalation: false
    # -- capabilities to add/drop
    capabilities: {}
    # -- privileged tells if the container is privileged
    privileged: false
    # -- runAsNonRoot tells if the container should run as a non-root user
    runAsNonRoot: true
    # -- runAsUser is the user ID to run the container as
    runAsUser: 1000
    # -- readOnlyRootFilesystem tells if the container should have a read-only root filesystem
    readOnlyRootFilesystem: false
    # -- seLinuxOptions to add
    seLinuxOptions: {}

  # Service configuration
  service:
    # -- type is the type of service to create
    type: ClusterIP
    # -- port is the port the service will listen on
    port: 7002

  # Ingress configuration
  ingress:
    # -- enabled allows you to enable or disable the Ingress
    enabled: false
    # -- className is the ingress class to use
    className: ""
    # -- annotations to add to the Ingress
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- hosts is the list of hostnames to be exposed
    hosts:
      []
      # - host: qlever-ui-example.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    # -- tls is the list of TLS configuration
    tls: []
    #  - secretName: qlever-ui-example-tls
    #    hosts:
    #      - qlever-ui-example.local

  # -- resources to request for the pod
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- livenessProbe is a health check to determine if the container is still running
  livenessProbe:
    httpGet:
      path: "/"
      port: http

  # -- readinessProbe is a health check to determine if the container is ready to serve traffic
  readinessProbe:
    httpGet:
      path: "/"
      port: http

  # -- volumes to mount on the output Deployment definition
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- volume mounts to use
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # -- nodeSelector to use
  nodeSelector: {}

  # -- tolerations to use
  tolerations: []

  # -- affinity to use
  affinity: {}
